{"ast":null,"code":"var _jsxFileName = \"D:\\\\react project\\\\newsapp\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport NewsItem from './NewsItem';\nimport Loading from './Loading';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass News extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchNews = async country => {\n      const {\n        category,\n        pageSize,\n        page\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=YOUR_API_KEY&page=${page}&pageSize=${pageSize}`;\n      try {\n        let data = await fetch(url);\n        let parsedData = await data.json();\n        if (parsedData.status === 'ok') {\n          this.setState({\n            articles: parsedData.articles,\n            totalResults: parsedData.totalResults,\n            loading: false\n          });\n        } else {\n          console.error(parsedData.message);\n          this.setState({\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        this.setState({\n          loading: false\n        });\n      }\n    };\n    this.handleNextClick = async () => {\n      if (this.state.page + 1 <= Math.ceil(this.state.totalResults / this.props.pageSize)) {\n        this.setState({\n          page: this.state.page + 1\n        }, () => this.fetchNews(this.props.country));\n      }\n    };\n    this.handlePrevClick = async () => {\n      if (this.state.page > 1) {\n        this.setState({\n          page: this.state.page - 1\n        }, () => this.fetchNews(this.props.country));\n      }\n    };\n    this.state = {\n      articles: [],\n      loading: false,\n      page: 1,\n      totalResults: 0\n    };\n  }\n  async componentDidMount() {\n    const {\n      country\n    } = this.props;\n    this.fetchNews(country);\n  }\n  async componentDidUpdate(prevProps) {\n    // If the country has changed, fetch new news\n    if (prevProps.country !== this.props.country) {\n      this.setState({\n        page: 1\n      }, () => this.fetchNews(this.props.country));\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"News Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.articles.length > 0 ? this.state.articles.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(NewsItem, {\n            title: element.title ? element.title.slice(0, 45) : '',\n            description: element.description ? element.description.slice(0, 88) : '',\n            imageUrl: element.urlToImage,\n            newsUrl: element.url,\n            author: element.author,\n            publishedAt: element.publishedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, element.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No news available for the selected country/category.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.page <= 1,\n          type: \"button\",\n          className: \"btn btn-dark\",\n          onClick: this.handlePrevClick,\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize),\n          type: \"button\",\n          className: \"btn btn-dark\",\n          onClick: this.handleNextClick,\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// A hook to extract the country from the URL (required to make it work with React Router)\nNews.defaultProps = {\n  pageSize: 6,\n  category: 'general'\n};\nNews.propTypes = {\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nconst NewsWithParams = () => {\n  _s();\n  const {\n    country\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(News, {\n    country: country\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 10\n  }, this);\n};\n_s(NewsWithParams, \"llnm9w59V8WVzyDr3L/T8v5CIos=\", false, function () {\n  return [useParams];\n});\n_c = NewsWithParams;\nexport default NewsWithParams;\nvar _c;\n$RefreshReg$(_c, \"NewsWithParams\");","map":{"version":3,"names":["React","Component","NewsItem","Loading","PropTypes","useParams","jsxDEV","_jsxDEV","News","constructor","props","fetchNews","country","category","pageSize","page","setState","loading","url","data","fetch","parsedData","json","status","articles","totalResults","console","error","message","handleNextClick","state","Math","ceil","handlePrevClick","componentDidMount","componentDidUpdate","prevProps","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","element","title","slice","description","imageUrl","urlToImage","newsUrl","author","publishedAt","disabled","type","onClick","defaultProps","propTypes","number","string","NewsWithParams","_s","_c","$RefreshReg$"],"sources":["D:/react project/newsapp/src/components/News.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport NewsItem from './NewsItem';\r\nimport Loading from './Loading';\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nclass News extends Component {\r\n  static defaultProps = {\r\n    pageSize: 6,\r\n    category: 'general',\r\n  };\r\n\r\n  static propTypes = {\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n      loading: false,\r\n      page: 1,\r\n      totalResults: 0,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { country } = this.props;\r\n    this.fetchNews(country);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    // If the country has changed, fetch new news\r\n    if (prevProps.country !== this.props.country) {\r\n      this.setState({ page: 1 }, () => this.fetchNews(this.props.country));\r\n    }\r\n  }\r\n\r\n  fetchNews = async (country) => {\r\n    const { category, pageSize, page } = this.props;\r\n\r\n    this.setState({ loading: true });\r\n\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=YOUR_API_KEY&page=${page}&pageSize=${pageSize}`;\r\n\r\n    try {\r\n      let data = await fetch(url);\r\n      let parsedData = await data.json();\r\n\r\n      if (parsedData.status === 'ok') {\r\n        this.setState({\r\n          articles: parsedData.articles,\r\n          totalResults: parsedData.totalResults,\r\n          loading: false,\r\n        });\r\n      } else {\r\n        console.error(parsedData.message);\r\n        this.setState({ loading: false });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching news:', error);\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  handleNextClick = async () => {\r\n    if (this.state.page + 1 <= Math.ceil(this.state.totalResults / this.props.pageSize)) {\r\n      this.setState({ page: this.state.page + 1 }, () => this.fetchNews(this.props.country));\r\n    }\r\n  };\r\n\r\n  handlePrevClick = async () => {\r\n    if (this.state.page > 1) {\r\n      this.setState({ page: this.state.page - 1 }, () => this.fetchNews(this.props.country));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h2>News Headlines</h2>\r\n        {this.state.loading && <Loading />}\r\n        <div className=\"row\">\r\n          {this.state.articles.length > 0 ? (\r\n            this.state.articles.map((element) => (\r\n              <div className=\"col-md-4\" key={element.url}>\r\n                <NewsItem\r\n                  title={element.title ? element.title.slice(0, 45) : ''}\r\n                  description={element.description ? element.description.slice(0, 88) : ''}\r\n                  imageUrl={element.urlToImage}\r\n                  newsUrl={element.url}\r\n                  author={element.author}\r\n                  publishedAt={element.publishedAt}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>No news available for the selected country/category.</div>\r\n          )}\r\n        </div>\r\n        <div className=\"container d-flex justify-content-between\">\r\n          <button disabled={this.state.page <= 1} type=\"button\" className=\"btn btn-dark\" onClick={this.handlePrevClick}>\r\n            &larr; Previous\r\n          </button>\r\n          <button\r\n            disabled={this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize)}\r\n            type=\"button\"\r\n            className=\"btn btn-dark\"\r\n            onClick={this.handleNextClick}\r\n          >\r\n            Next &rarr;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// A hook to extract the country from the URL (required to make it work with React Router)\r\nconst NewsWithParams = () => {\r\n  const { country } = useParams();\r\n  return <News country={country} />;\r\n};\r\n\r\nexport default NewsWithParams;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}